{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Bureau\\\\Projet\\\\Bilan-Carbone\\\\client\\\\src\\\\components\\\\Statistique\\\\Doughnuts.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Chart, DoughnutController, ArcElement, Tooltip, Legend } from 'chart.js';\n\n// Register the components outside of the CustomChart component. No need to export this.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(DoughnutController, ArcElement, Tooltip, Legend);\nfunction CustomChart({\n  data\n}) {\n  _s();\n  const chartRef = React.useRef(null);\n  React.useEffect(() => {\n    const chartContext = chartRef.current.getContext('2d');\n    const doughnutChart = new Chart(chartContext, {\n      type: 'doughnut',\n      data: data,\n      options: {\n        plugins: {\n          legend: {\n            position: 'bottom',\n            align: 'start',\n            // Alignement de la légende.\n            labels: {\n              // Génération des labels avec les valeurs de pourcentage.\n              generateLabels: function (chart) {\n                const data = chart.data;\n                if (data.labels.length && data.datasets.length) {\n                  return data.labels.map((label, i) => {\n                    const meta = chart.getDatasetMeta(0);\n                    const total = meta.total;\n                    const value = data.datasets[0].data[i];\n                    const percentage = (value / total * 100).toFixed(2) + '%';\n                    return {\n                      text: `${label}: ${value} (${percentage})`,\n                      fillStyle: data.datasets[0].backgroundColor[i]\n                    };\n                  });\n                } else {\n                  return [];\n                }\n              }\n            }\n          }\n        }\n      }\n    });\n\n    // Proper cleanup: destroy chart instance when the component unmounts\n    return () => {\n      doughnutChart.destroy();\n    };\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: chartRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 12\n  }, this);\n}\n\n// Export CustomChart as the default export\n_s(CustomChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = CustomChart;\nexport default CustomChart;\nvar _c;\n$RefreshReg$(_c, \"CustomChart\");","map":{"version":3,"names":["React","Chart","DoughnutController","ArcElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","CustomChart","data","_s","chartRef","useRef","useEffect","chartContext","current","getContext","doughnutChart","type","options","plugins","legend","position","align","labels","generateLabels","chart","length","datasets","map","label","i","meta","getDatasetMeta","total","value","percentage","toFixed","text","fillStyle","backgroundColor","destroy","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Bureau/Projet/Bilan-Carbone/client/src/components/Statistique/Doughnuts.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Chart, DoughnutController, ArcElement, Tooltip, Legend } from 'chart.js';\r\n\r\n// Register the components outside of the CustomChart component. No need to export this.\r\nChart.register(DoughnutController, ArcElement, Tooltip, Legend);\r\n\r\nfunction CustomChart({ data }) {\r\n    const chartRef = React.useRef(null);\r\n  \r\n    React.useEffect(() => {\r\n      const chartContext = chartRef.current.getContext('2d');\r\n      const doughnutChart = new Chart(chartContext, {\r\n        type: 'doughnut', \r\n        data: data,\r\n        options: {\r\n          plugins: {\r\n            legend: {\r\n              position: 'bottom',\r\n              align: 'start', // Alignement de la légende.\r\n              labels: {\r\n                // Génération des labels avec les valeurs de pourcentage.\r\n                generateLabels: function (chart) {\r\n                  const data = chart.data;\r\n                  if (data.labels.length && data.datasets.length) {\r\n                    return data.labels.map((label, i) => {\r\n                      const meta = chart.getDatasetMeta(0);\r\n                      const total = meta.total;\r\n                      const value = data.datasets[0].data[i];\r\n                      const percentage = ((value / total) * 100).toFixed(2) + '%';\r\n      \r\n                      return {\r\n                        text: `${label}: ${value} (${percentage})`,\r\n                        fillStyle: data.datasets[0].backgroundColor[i],\r\n                      };\r\n                    });\r\n                  } else {\r\n                    return [];\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      // Proper cleanup: destroy chart instance when the component unmounts\r\n      return () => {\r\n        doughnutChart.destroy();\r\n      };\r\n    }, [data]);\r\n  \r\n    return <canvas ref={chartRef} />;\r\n}\r\n\r\n// Export CustomChart as the default export\r\nexport default CustomChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,kBAAkB,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;;AAEjF;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAN,KAAK,CAACO,QAAQ,CAACN,kBAAkB,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE/D,SAASI,WAAWA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGZ,KAAK,CAACa,MAAM,CAAC,IAAI,CAAC;EAEnCb,KAAK,CAACc,SAAS,CAAC,MAAM;IACpB,MAAMC,YAAY,GAAGH,QAAQ,CAACI,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;IACtD,MAAMC,aAAa,GAAG,IAAIjB,KAAK,CAACc,YAAY,EAAE;MAC5CI,IAAI,EAAE,UAAU;MAChBT,IAAI,EAAEA,IAAI;MACVU,OAAO,EAAE;QACPC,OAAO,EAAE;UACPC,MAAM,EAAE;YACNC,QAAQ,EAAE,QAAQ;YAClBC,KAAK,EAAE,OAAO;YAAE;YAChBC,MAAM,EAAE;cACN;cACAC,cAAc,EAAE,SAAAA,CAAUC,KAAK,EAAE;gBAC/B,MAAMjB,IAAI,GAAGiB,KAAK,CAACjB,IAAI;gBACvB,IAAIA,IAAI,CAACe,MAAM,CAACG,MAAM,IAAIlB,IAAI,CAACmB,QAAQ,CAACD,MAAM,EAAE;kBAC9C,OAAOlB,IAAI,CAACe,MAAM,CAACK,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAK;oBACnC,MAAMC,IAAI,GAAGN,KAAK,CAACO,cAAc,CAAC,CAAC,CAAC;oBACpC,MAAMC,KAAK,GAAGF,IAAI,CAACE,KAAK;oBACxB,MAAMC,KAAK,GAAG1B,IAAI,CAACmB,QAAQ,CAAC,CAAC,CAAC,CAACnB,IAAI,CAACsB,CAAC,CAAC;oBACtC,MAAMK,UAAU,GAAG,CAAED,KAAK,GAAGD,KAAK,GAAI,GAAG,EAAEG,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG;oBAE3D,OAAO;sBACLC,IAAI,EAAG,GAAER,KAAM,KAAIK,KAAM,KAAIC,UAAW,GAAE;sBAC1CG,SAAS,EAAE9B,IAAI,CAACmB,QAAQ,CAAC,CAAC,CAAC,CAACY,eAAe,CAACT,CAAC;oBAC/C,CAAC;kBACH,CAAC,CAAC;gBACJ,CAAC,MAAM;kBACL,OAAO,EAAE;gBACX;cACF;YACF;UACF;QACF;MACF;IACF,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXd,aAAa,CAACwB,OAAO,CAAC,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,CAAChC,IAAI,CAAC,CAAC;EAEV,oBAAOH,OAAA;IAAQoC,GAAG,EAAE/B;EAAS;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpC;;AAEA;AAAApC,EAAA,CAhDSF,WAAW;AAAAuC,EAAA,GAAXvC,WAAW;AAiDpB,eAAeA,WAAW;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}