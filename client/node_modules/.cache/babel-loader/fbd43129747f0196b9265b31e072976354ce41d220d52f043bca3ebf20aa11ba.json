{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Bureau\\\\Projet\\\\Bilan-Carbone\\\\client\\\\src\\\\components\\\\ResetPassword\\\\PerformReset.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport \"./PerformReset.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PerformReset = () => {\n  _s();\n  const {\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n\n  // Validations séparées pour chaque critère\n  const isValidLength = password.length >= 8;\n  const hasUpperCase = /[A-Z]/.test(password);\n  const hasLowerCase = /[a-z]/.test(password);\n  const hasNumber = /\\d/.test(password);\n  const hasSpecialChar = /[@$!%*?&]/.test(password);\n  const validatePassword = () => {\n    if (!isValidLength || !hasUpperCase || !hasLowerCase || !hasNumber || !hasSpecialChar) {\n      setMessage(\"Le mot de passe ne respecte pas tous les critères requis.\");\n      return false;\n    }\n    if (password !== confirmPassword) {\n      setMessage(\"Les mots de passe ne correspondent pas.\");\n      return false;\n    }\n    return true;\n  };\n  const handleResetPassword = async () => {\n    if (!validatePassword()) {\n      return;\n    }\n    setIsSubmitting(true);\n    try {\n      const response = await fetch(`http://localhost:5000/reset-password/${token}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          password\n        })\n      });\n      const result = await response.json();\n      setMessage(result.message);\n      if (result.success) {\n        setTimeout(() => {\n          navigate(\"/login\");\n        }, 3000);\n      }\n    } catch (error) {\n      setMessage(\"Une erreur s'est produite. Veuillez réessayer.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"R\\xE9initialiser le mot de passe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"reset-input\",\n        type: showPassword ? \"text\" : \"password\",\n        placeholder: \"Entrez votre nouveau mot de passe\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowPassword(!showPassword),\n        className: \"show-password-button\",\n        children: showPassword ? \"Masquer\" : \"Afficher\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"password-criteria\",\n      children: [{\n        test: isValidLength,\n        text: \"Au moins 8 caractères\"\n      }, {\n        test: hasUpperCase,\n        text: \"Une lettre majuscule\"\n      }, {\n        test: hasLowerCase,\n        text: \"Une lettre minuscule\"\n      }, {\n        test: hasNumber,\n        text: \"Un chiffre\"\n      }, {\n        test: hasSpecialChar,\n        text: \"Un caractère spécial (@$!%*?&)\"\n      }].map(({\n        test,\n        text\n      }, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          color: test ? \"green\" : \"red\"\n        },\n        children: [test ? \"✅\" : \"❌\", \" \", text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirm-password-input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"reset-input\",\n        type: \"password\",\n        placeholder: \"Confirmez votre nouveau mot de passe\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset-button\",\n      onClick: handleResetPassword,\n      disabled: isSubmitting,\n      children: isSubmitting ? \"⏳Réinitialisation...\" : \"Réinitialiser le mot de passe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(PerformReset, \"1sJ8h9aoC53xV5QWbvUpZ05iBh4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PerformReset;\nvar _c;\n$RefreshReg$(_c, \"PerformReset\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","jsxDEV","_jsxDEV","PerformReset","_s","token","navigate","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","isSubmitting","setIsSubmitting","showPassword","setShowPassword","isValidLength","length","hasUpperCase","test","hasLowerCase","hasNumber","hasSpecialChar","validatePassword","handleResetPassword","response","fetch","method","headers","body","JSON","stringify","result","json","success","setTimeout","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","text","map","index","style","color","disabled","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Bureau/Projet/Bilan-Carbone/client/src/components/ResetPassword/PerformReset.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport \"./PerformReset.css\";\n\nexport const PerformReset = () => {\n  const { token } = useParams();\n  const navigate = useNavigate();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n\n  // Validations séparées pour chaque critère\n  const isValidLength = password.length >= 8;\n  const hasUpperCase = /[A-Z]/.test(password);\n  const hasLowerCase = /[a-z]/.test(password);\n  const hasNumber = /\\d/.test(password);\n  const hasSpecialChar = /[@$!%*?&]/.test(password);\n\n  const validatePassword = () => {\n    if (\n      !isValidLength ||\n      !hasUpperCase ||\n      !hasLowerCase ||\n      !hasNumber ||\n      !hasSpecialChar\n    ) {\n      setMessage(\"Le mot de passe ne respecte pas tous les critères requis.\");\n      return false;\n    }\n\n    if (password !== confirmPassword) {\n      setMessage(\"Les mots de passe ne correspondent pas.\");\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleResetPassword = async () => {\n    if (!validatePassword()) {\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    try {\n      const response = await fetch(\n        `http://localhost:5000/reset-password/${token}`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ password }),\n        }\n      );\n\n      const result = await response.json();\n      setMessage(result.message);\n\n      if (result.success) {\n        setTimeout(() => {\n          navigate(\"/login\");\n        }, 3000);\n      }\n    } catch (error) {\n      setMessage(\"Une erreur s'est produite. Veuillez réessayer.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"reset-password-container\">\n      <h1>Réinitialiser le mot de passe</h1>\n      <div className=\"password-input-container\">\n        <input\n          className=\"reset-input\"\n          type={showPassword ? \"text\" : \"password\"}\n          placeholder=\"Entrez votre nouveau mot de passe\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button\n          onClick={() => setShowPassword(!showPassword)}\n          className=\"show-password-button\"\n        >\n          {showPassword ? \"Masquer\" : \"Afficher\"}\n        </button>\n      </div>\n      <ul className=\"password-criteria\">\n        {[\n          { test: isValidLength, text: \"Au moins 8 caractères\" },\n          { test: hasUpperCase, text: \"Une lettre majuscule\" },\n          { test: hasLowerCase, text: \"Une lettre minuscule\" },\n          { test: hasNumber, text: \"Un chiffre\" },\n          { test: hasSpecialChar, text: \"Un caractère spécial (@$!%*?&)\" },\n        ].map(({ test, text }, index) => (\n          <li key={index} style={{ color: test ? \"green\" : \"red\" }}>\n            {test ? \"✅\" : \"❌\"} {text}\n          </li>\n        ))}\n      </ul>\n      <div className=\"confirm-password-input-container\">\n        <input\n          className=\"reset-input\"\n          type=\"password\"\n          placeholder=\"Confirmez votre nouveau mot de passe\"\n          value={confirmPassword}\n          onChange={(e) => setConfirmPassword(e.target.value)}\n        />\n      </div>\n      <button\n        className=\"reset-button\"\n        onClick={handleResetPassword}\n        disabled={isSubmitting}\n      >\n        {isSubmitting\n          ? \"⏳Réinitialisation...\"\n          : \"Réinitialiser le mot de passe\"}\n      </button>\n      <p>{message}</p>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM;IAAEC;EAAM,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC7B,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;;EAEvD;EACA,MAAMmB,aAAa,GAAGV,QAAQ,CAACW,MAAM,IAAI,CAAC;EAC1C,MAAMC,YAAY,GAAG,OAAO,CAACC,IAAI,CAACb,QAAQ,CAAC;EAC3C,MAAMc,YAAY,GAAG,OAAO,CAACD,IAAI,CAACb,QAAQ,CAAC;EAC3C,MAAMe,SAAS,GAAG,IAAI,CAACF,IAAI,CAACb,QAAQ,CAAC;EACrC,MAAMgB,cAAc,GAAG,WAAW,CAACH,IAAI,CAACb,QAAQ,CAAC;EAEjD,MAAMiB,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IACE,CAACP,aAAa,IACd,CAACE,YAAY,IACb,CAACE,YAAY,IACb,CAACC,SAAS,IACV,CAACC,cAAc,EACf;MACAX,UAAU,CAAC,2DAA2D,CAAC;MACvE,OAAO,KAAK;IACd;IAEA,IAAIL,QAAQ,KAAKE,eAAe,EAAE;MAChCG,UAAU,CAAC,yCAAyC,CAAC;MACrD,OAAO,KAAK;IACd;IAEA,OAAO,IAAI;EACb,CAAC;EAED,MAAMa,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI,CAACD,gBAAgB,CAAC,CAAC,EAAE;MACvB;IACF;IAEAV,eAAe,CAAC,IAAI,CAAC;IAErB,IAAI;MACF,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CACzB,wCAAuCtB,KAAM,EAAC,EAC/C;QACEuB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEzB;QAAS,CAAC;MACnC,CACF,CAAC;MAED,MAAM0B,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MACpCtB,UAAU,CAACqB,MAAM,CAACtB,OAAO,CAAC;MAE1B,IAAIsB,MAAM,CAACE,OAAO,EAAE;QAClBC,UAAU,CAAC,MAAM;UACf9B,QAAQ,CAAC,QAAQ,CAAC;QACpB,CAAC,EAAE,IAAI,CAAC;MACV;IACF,CAAC,CAAC,OAAO+B,KAAK,EAAE;MACdzB,UAAU,CAAC,gDAAgD,CAAC;IAC9D,CAAC,SAAS;MACRE,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKoC,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBACvCrC,OAAA;MAAAqC,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCzC,OAAA;MAAKoC,SAAS,EAAC,0BAA0B;MAAAC,QAAA,gBACvCrC,OAAA;QACEoC,SAAS,EAAC,aAAa;QACvBM,IAAI,EAAE7B,YAAY,GAAG,MAAM,GAAG,UAAW;QACzC8B,WAAW,EAAC,mCAAmC;QAC/CC,KAAK,EAAEvC,QAAS;QAChBwC,QAAQ,EAAGC,CAAC,IAAKxC,WAAW,CAACwC,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACFzC,OAAA;QACEgD,OAAO,EAAEA,CAAA,KAAMlC,eAAe,CAAC,CAACD,YAAY,CAAE;QAC9CuB,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EAE/BxB,YAAY,GAAG,SAAS,GAAG;MAAU;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNzC,OAAA;MAAIoC,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAC9B,CACC;QAAEnB,IAAI,EAAEH,aAAa;QAAEkC,IAAI,EAAE;MAAwB,CAAC,EACtD;QAAE/B,IAAI,EAAED,YAAY;QAAEgC,IAAI,EAAE;MAAuB,CAAC,EACpD;QAAE/B,IAAI,EAAEC,YAAY;QAAE8B,IAAI,EAAE;MAAuB,CAAC,EACpD;QAAE/B,IAAI,EAAEE,SAAS;QAAE6B,IAAI,EAAE;MAAa,CAAC,EACvC;QAAE/B,IAAI,EAAEG,cAAc;QAAE4B,IAAI,EAAE;MAAiC,CAAC,CACjE,CAACC,GAAG,CAAC,CAAC;QAAEhC,IAAI;QAAE+B;MAAK,CAAC,EAAEE,KAAK,kBAC1BnD,OAAA;QAAgBoD,KAAK,EAAE;UAAEC,KAAK,EAAEnC,IAAI,GAAG,OAAO,GAAG;QAAM,CAAE;QAAAmB,QAAA,GACtDnB,IAAI,GAAG,GAAG,GAAG,GAAG,EAAC,GAAC,EAAC+B,IAAI;MAAA,GADjBE,KAAK;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLzC,OAAA;MAAKoC,SAAS,EAAC,kCAAkC;MAAAC,QAAA,eAC/CrC,OAAA;QACEoC,SAAS,EAAC,aAAa;QACvBM,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,sCAAsC;QAClDC,KAAK,EAAErC,eAAgB;QACvBsC,QAAQ,EAAGC,CAAC,IAAKtC,kBAAkB,CAACsC,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNzC,OAAA;MACEoC,SAAS,EAAC,cAAc;MACxBY,OAAO,EAAEzB,mBAAoB;MAC7B+B,QAAQ,EAAE3C,YAAa;MAAA0B,QAAA,EAEtB1B,YAAY,GACT,sBAAsB,GACtB;IAA+B;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACTzC,OAAA;MAAAqC,QAAA,EAAI5B;IAAO;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV,CAAC;AAACvC,EAAA,CA1HWD,YAAY;EAAA,QACLJ,SAAS,EACVC,WAAW;AAAA;AAAAyD,EAAA,GAFjBtD,YAAY;AAAA,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}